buildscript {
    ext.kotlin_version = '1.9.0'  // Aktuelle Kotlin-Version
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0'
        classpath 'com.google.gms:google-services:4.3.15' // Google Services Plugin
    }
}

plugins {
    id "com.android.application"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "2")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0.2")

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    throw new GradleException("key.properties file not found")
}

android {
    namespace = "com.teg.vereinsapp"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion
    compileSdkVersion 34 // Oder die neueste unterstützte Version

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        targetSdkVersion 33 // Oder die neueste unterstützte Version
        applicationId = "com.tennisverein.weidenbach" // Hier wird die package id gesetzt
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode 3 // Erhöhe diesen Wert (z. B. auf 4)
    	versionName "1.0.3"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            // Kein signingConfig für Debug-Build
            signingConfig null
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        implementation platform('com.google.firebase:firebase-bom:33.9.0')  // Firebase BOM
        implementation 'com.google.firebase:firebase-analytics'            // Firebase Analytics
        implementation 'com.google.firebase:firebase-auth'                 // Firebase Auth
        implementation 'com.google.firebase:firebase-database'             // Firebase Realtime Database
        implementation 'com.google.firebase:firebase-messaging'            // Firebase Messaging

        implementation 'androidx.appcompat:appcompat:1.6.0'  // Hinzugefügt hier!
    }
}

flutter {
    source = "../.."
}
